{
	"info": {
		"_postman_id": "acdd9ac3-4906-45c9-8a7d-071b4b63b59a",
		"name": "Events",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28595434"
	},
	"item": [
		{
			"name": "Single Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//vérifie statut",
							"",
							"pm.test(\"Le code de statut doit être 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//vérifie le format de la réponse",
							"",
							"pm.test(\"La réponse doit contenir des données JSON\", () => {",
							"    pm.expect(pm.response.json()).to.be.an(\"object\");",
							"    pm.expect(pm.response.json()).to.have.property(\"data\");",
							"});",
							"",
							"//vérifie les données",
							"    const jsonData = pm.response.json();",
							"",
							"pm.test(\"La structure des données est conforme\", () => {",
							"    pm.expect(jsonData).to.have.property(\"data\");",
							"    pm.expect(jsonData.data).to.have.property(\"id\");",
							"    pm.expect(jsonData.data).to.have.property(\"name\");",
							"    pm.expect(jsonData.data).to.have.property(\"description\");",
							"    pm.expect(jsonData.data).to.have.property(\"start_time\");",
							"    pm.expect(jsonData.data).to.have.property(\"end_time\");",
							"    pm.expect(jsonData.data).to.have.property(\"user\");",
							"    pm.expect(jsonData.data.user).to.have.property(\"id\");",
							"    pm.expect(jsonData.data.user).to.have.property(\"name\");",
							"    pm.expect(jsonData.data.user).to.have.property(\"email\");",
							"    pm.expect(jsonData.data.user).to.have.property(\"email_verified_at\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/events/9",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"events",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "All events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "All events Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 201\",  () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Status code name has string\", () => {",
							"  pm.response.to.have.status(\"Created\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"});",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Les données ajoutées sont correctes\", () => {",
							"    pm.expect(jsonData.data).to.have.property(\"name\", \"Second Event\");",
							"    // Ajoutez des vérifications supplémentaires pour les autres champs ajoutés",
							"});",
							"",
							"",
							"pm.test(\"Test data type of the response\", () => {",
							"    pm.expect(jsonData).to.be.an(\"object\");",
							"    pm.expect(jsonData.data.name).to.be.a(\"string\");",
							"    pm.expect(jsonData.data.description).to.satisfy((description) => {",
							"        return description === null || typeof description === \"string\";",
							"    });",
							"    pm.expect(jsonData.data.start_time).to.be.a(\"string\");",
							"    pm.expect(jsonData.data.end_time).to.be.a(\"string\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\" : \"Second Event\",\n    \"start_time\" : \"2024-02-23 11:14:02\",\n    \"end_time\" : \"2024-02-24 11:14:02\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\" : \"The name of this event got modified\" \n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/7",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/7",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Attendees by events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/46/attendees?page=1",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						"46",
						"attendees"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Attendee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/46/attendees/774",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						"46",
						"attendees",
						"774"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Attendee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/13/attendees/1",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						"13",
						"attendees",
						"1"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create  Attendee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Le code de statut doit être 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}events/17/attendees",
					"host": [
						"{{BASE_URL}}events"
					],
					"path": [
						"17",
						"attendees"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}